@using System.Web.Mvc
@using System.Web.Mvc.Html
@using Umbraco.Web
@using InShow.Controllers
@using InShow.Models
@model LoginViewModel

<div class='container' style="margin-top:10px;">

    @{
        Html.EnableClientValidation(true);
        Html.EnableUnobtrusiveJavaScript(true);
    }

    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <h4>Forgotten your password?</h4>
            <p>
                @Html.Raw("Don't worry we all forget our passwords from time to time and <a href='/forgotten-password' class='alert-link'>may need a reminder</a>.")
            </p>

            @foreach (ModelState modelState in ViewData.ModelState.Values)
            {
                var errors = modelState.Errors;

                if (errors.Any())
                {
                    <ul>
                        @foreach (ModelError error in errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                }
            }
        </div>
    }


    @using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleLogin"))
    {
        @Html.AntiForgeryToken()
<div class="row">
    <div class="col-md-6">
        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.UserName, "Username", new { @class = "control-label" })
                @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", placeholder = "Username" })
                @Html.ValidationMessageFor(model => model.UserName, string.Empty, new { @class = "help-block" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Password", new { @class = "control-label" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(model => model.Password, string.Empty, new { @class = "help-block" })
            </div>

            @Html.HiddenFor(Model => Model.ReturnUrl)

            <button type="submit" class="btn btn-default">Login</button>

        </fieldset>

    </div>
</div>
       
    }

</div>