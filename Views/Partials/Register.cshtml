@using System.Web.Mvc.Html
@using Umbraco.Web
@using InShow.Controllers
@using InShow.Models
@model RegisterViewModel

<div class='container' style="margin-top:150px;">

    @if (TempData.ContainsKey("CustomMessage"))
    {
        <h1>Congragulations!</h1>

        <div>You have successfully registered with InShow. Please varify your email address - @TempData["CustomMessage"]</div>

    }
    else
    {


        <div id="rootwizard">
            <div class="navbar">
                <div class="navbar-inner">

                    <ul>
                        <li><a href="#tab1" data-toggle="tab">User Type</a></li>
                        <li><a href="#tab2" data-toggle="tab">Buyer</a></li>
                        <li><a href="#tab3" data-toggle="tab">Agent</a></li>
                        <li><a href="#tab4" data-toggle="tab">Agency</a></li>
                    </ul>

                </div>
            </div>
            <div id="bar" class="progress">
                <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>
            </div>
            <div class="tab-content">
                <div class="tab-pane" id="tab1">

                    <h1>Welcome to InShow</h1>

                    <p>Are you buyer or an agent</p>

                    <ul class="pager wizard">
                        <li class="buyer"><a href="#">Buyer</a></li>
                        <li class="agent"><a href="#">Agent</a></li>
                        <li class="agency"><a href="#">Agency</a></li>
                    </ul>

                </div>


                <div class="tab-pane" id="tab2">

                    @using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister"))
                {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(false)

                        <h1>Buyer Form</h1>

                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterBuyer.FirstName, "First Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterBuyer.FirstName, new { @class = "form-control", placeholder = "Your first name" })
                                @Html.ValidationMessageFor(model => model.RegisterBuyer.FirstName, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterBuyer.LastName, "Last Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterBuyer.LastName, new { @class = "form-control", placeholder = "Your surname" })
                                @Html.ValidationMessageFor(model => model.RegisterBuyer.LastName, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterBuyer.EmailAddress, "Email address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterBuyer.EmailAddress, new { @class = "form-control", placeholder = "Email Address" })
                                @Html.ValidationMessageFor(model => model.RegisterBuyer.EmailAddress, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterBuyer.Cellphone, "Cell Number", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterBuyer.Cellphone, new { @class = "form-control", placeholder = "Cell Number" })
                                @Html.ValidationMessageFor(model => model.RegisterBuyer.Cellphone, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterBuyer.Password, "Password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.RegisterBuyer.Password, new { @class = "form-control", placeholder = "Password" })
                                @Html.ValidationMessageFor(model => model.RegisterBuyer.Password, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterBuyer.ConfirmPassword, "Confirm password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.RegisterBuyer.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                                @Html.ValidationMessageFor(model => model.RegisterBuyer.ConfirmPassword, string.Empty, new { @class = "help-block" })
                            </div>

                            <button type="submit" name="UserType" value="Buyer" class="btn btn-default">Register</button>

                        </fieldset>

                    }

                </div>


                <div class="tab-pane" id="tab3">

                    @using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister"))
                {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(false)

                        <h1>Agency Form</h1>

                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.FirstName, "First Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.FirstName, new { @class = "form-control", placeholder = "Your first name" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.FirstName, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.LastName, "Last Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.LastName, new { @class = "form-control", placeholder = "Your surname" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.LastName, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.EmailAddress, "Email address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.EmailAddress, new { @class = "form-control", placeholder = "Email Address" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.EmailAddress, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.Cellphone, "Cell Number", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.Cellphone, new { @class = "form-control", placeholder = "Cell Number" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.Cellphone, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.Agency, "Agency", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.Agency, new { @class = "form-control", placeholder = "Agency" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.Agency, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.AgencyPin, "Agency Pin", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.AgencyPin, new { @class = "form-control", placeholder = "Agency Pin" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.AgencyPin, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.Password, "Password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.RegisterAgent.Password, new { @class = "form-control", placeholder = "Password" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.Password, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.ConfirmPassword, "Confirm password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.RegisterAgent.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.ConfirmPassword, string.Empty, new { @class = "help-block" })
                            </div>

                            <button type="submit" name="UserType" value="Agent" class="btn btn-default">Register</button>


                        </fieldset>

                    }

                </div>

                <div class="tab-pane" id="tab4">

                    @using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister"))
                {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(false)

                        <h1>Agency Form</h1>

                        <fieldset>
                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.FirstName, "First Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.FirstName, new { @class = "form-control", placeholder = "Your first name" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.FirstName, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.LastName, "Last Name", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.LastName, new { @class = "form-control", placeholder = "Your surname" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.LastName, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.EmailAddress, "Email address", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.EmailAddress, new { @class = "form-control", placeholder = "Email Address" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.EmailAddress, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.Cellphone, "Cell Number", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.Cellphone, new { @class = "form-control", placeholder = "Cell Number" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.Cellphone, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.Agency, "Agency", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.Agency, new { @class = "form-control", placeholder = "Agency" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.Agency, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.AgencyPin, "Agency Pin", new { @class = "control-label" })
                                @Html.TextBoxFor(model => model.RegisterAgent.AgencyPin, new { @class = "form-control", placeholder = "Agency Pin" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.AgencyPin, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.Password, "Password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.RegisterAgent.Password, new { @class = "form-control", placeholder = "Password" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.Password, string.Empty, new { @class = "help-block" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RegisterAgent.ConfirmPassword, "Confirm password", new { @class = "control-label" })
                                @Html.PasswordFor(model => model.RegisterAgent.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm Password" })
                                @Html.ValidationMessageFor(model => model.RegisterAgent.ConfirmPassword, string.Empty, new { @class = "help-block" })
                            </div>

                            <button type="submit" name="UserType" value="Agent" class="btn btn-default">Register</button>


                        </fieldset>

                    }

                </div>

                <ul class="pager wizard">
                    <li class="previous first" style="display:none;"><a href="#">First</a></li>
                    <li class="previous"><a href="#">Previous</a></li>
                    <li class="next last" style="display:none;"><a href="#">Last</a></li>
                    <li class="next"><a href="#">Next</a></li>
                </ul>


            </div>
        </div>

    }
</div>



<script>

    $(document).ready(function () {

        $('#rootwizard').bootstrapWizard({
            onTabShow: function (tab, navigation, index) {
                var $total = navigation.find('li').length;
                var $current = index + 1;
                var $percent = ($current / $total) * 100;
                $('#rootwizard .progress-bar').css({ width: $percent + '%' });
            }
        });

        $('#rootwizard .buyer').click(function () {
            $('#rootwizard').find("a[href*='tab2']").trigger('click');
        });

        $('#rootwizard .agent').click(function () {
            $('#rootwizard').find("a[href*='tab3']").trigger('click');
        });

        $('#rootwizard .agency').click(function () {
            $('#rootwizard').find("a[href*='tab4']").trigger('click');
        });



    });






</script>







