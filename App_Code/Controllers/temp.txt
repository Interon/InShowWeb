@using System.Web.Mvc.Html
@using Umbraco.Web
@using InShow.Controllers
@using InShow.Models
@model RegisterUserTestViewModel

<div class='container' style="margin-top:150px;">

    @if (TempData.ContainsKey("CustomMessage"))
    {
        <div>Hooray! - @TempData["CustomMessage"]</div>
    }
    else
    {
        using (Html.BeginUmbracoForm<AuthSurfaceController>("FormSubmit"))
        {
            switch (Model.StepIndex)
            {
                case 0:
                    @Html.LabelFor(m => Model.CheckUser.Name)
                    @Html.EditorFor(m => Model.CheckUser.Name)
                    @Html.ValidationMessageFor(m => Model.CheckUser.Name)<br />

                    @Html.LabelFor(m => Model.CheckUser.Email)
                    @Html.EditorFor(m => Model.CheckUser.Email)
                    @Html.ValidationMessageFor(m => Model.CheckUser.Email)

                    @Html.EditorFor(x => Model.RegisterBuyer, "HiddenForAll", "RegisterBuyer")
                    @Html.EditorFor(x => Model.RegisterAgent, "HiddenForAll", "RegisterAgent")

                    break;
                case 1:
                    @Html.LabelFor(m => Model.RegisterBuyer.EventId)
                    @Html.EditorFor(m => Model.RegisterBuyer.EventId)
                    @Html.ValidationMessageFor(m => Model.RegisterBuyer.EventId)<br />

                    @Html.LabelFor(m => Model.RegisterBuyer.NumberOfTickets)
                    @Html.EditorFor(m => Model.RegisterBuyer.NumberOfTickets)
                    @Html.ValidationMessageFor(m => Model.RegisterBuyer.NumberOfTickets)

                    @Html.EditorFor(x => Model.CheckUser, "HiddenForAll", "CheckUser")
                    @Html.EditorFor(x => Model.RegisterAgent, "HiddenForAll", "RegisterAgent")

                    break;
                case 2:
                    @Html.LabelFor(m => Model.RegisterAgent.Agreed)
                    @Html.EditorFor(m => Model.RegisterAgent.Agreed)
                    @Html.ValidationMessageFor(m => Model.RegisterAgent.Agreed)

                    @Html.EditorFor(x => Model.CheckUser, "HiddenForAll", "PCheckUser")
                    @Html.EditorFor(x => Model.RegisterBuyer, "HiddenForAll", "RegisterBuyer")

                    break;
            }

            <input type="hidden" name="StepIndex" value="@Model.StepIndex" />

            <button type="submit" name="Previous" value="true">Previous</button>
            <button type="submit" name="Next" value="true">Next</button>
        }
    }

</div>












